{"version":3,"file":"connectModalDesktop.ed0e26e7.mjs","sources":["../src/connectModal/connectModalDesktop.tsx"],"sourcesContent":["import { ReactNode, useState } from 'react'\r\nimport { IChain, isChainEmpty } from \"../typesAndInterfaces\"\r\nimport { Col, Row } from 'antd'\r\nimport styles from \"./connectModalDesktop.module.less\"\r\nimport { ConnectButton } from './connectButton';\r\nimport { MetamaskIcon } from './metamaskIcon';\r\nimport { WalletConnectIcon } from './walletConnectIcon';\r\nimport { Gutter } from 'antd/lib/grid/row';\r\nimport { ConnectorNames } from '@oort/web3-connectors';\r\nimport { OortModal } from '../oortModal';\r\nimport { IWeb3 } from './connectModal';\r\nimport { ChainButtonWithLogic } from './chainButtonWithLogic';\r\nimport { Alert } from './alert';\r\nimport { Bold } from './bold';\r\n\r\ninterface IProps {\r\n\tweb3: IWeb3\r\n\texpectedChainId?: number\r\n\tvisible: boolean\r\n\t /**\r\n     * @deprecated Use onClose, afterConnect, afterChainSwitch\r\n     */\r\n\tonCancel?: () => void\r\n\r\n\t/** executed when user click 'X' in the top right corner */\r\n\tonClose?: () => void\r\n\tafterConnect?: () => void\r\n\tafterChainSwitch?: () => void\r\n}\r\n\r\nconst ConnectModalDesktop = ({ web3, onCancel, visible, onClose, afterChainSwitch, afterConnect, expectedChainId }: IProps) => {\r\n\r\n\tconst [ loading, setLoading ] = useState(false)\r\n\tconst {  supportedChains, chain, switchChain, canSwitchChain, connect, account, connectorName, supportedConnectors } = web3\r\n\t\r\n\tconst connectAndClose = async (chainId: number, cnnName: ConnectorNames) => {\r\n\t\tsetLoading(true)\r\n        try {\r\n            await connect(chainId, cnnName)\r\n\t\t\tonCancel && onCancel()\r\n\t\t\tafterConnect && afterConnect()\r\n        }\r\n        finally {\r\n            setLoading(false)\r\n        }\r\n\t}\r\n\r\n\tconst switchChainAndClose = async (newChainId: number): Promise<void> => {\t\t\r\n        setLoading(true)\r\n        try {\r\n            await switchChain(newChainId)\r\n\t\t\tonCancel && onCancel()\r\n\t\t\tafterChainSwitch && afterChainSwitch()\r\n        }\r\n        finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n\tconst footer = <>\r\n\t\t<div>By connecting, I accept Oort Digitalâ€™s <a href='https://oort.digital/terms'>Terms of Service</a> and acknowledge</div>\r\n\t\t<div>that you have read and understand the <a href='https://oort.digital/terms#disclaimer'>Oort Digital protocol disclaimer</a></div>\r\n\t</>\r\n\r\n\tconst renderWalletBtn = (chainId: number, walletName: string, cnnName: ConnectorNames, icon: ReactNode) => {\r\n\r\n\t\tif(account && cnnName === connectorName) {\r\n\t\t\treturn <ConnectButton\r\n\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\twalletName={walletName}\r\n\t\t\t\t\twalletIcon={icon}\r\n\t\t\t\t\taccount={account}/>\r\n\t\t}\r\n\r\n\t\tconst connector = supportedConnectors[cnnName]\r\n\t\tif(!connector.isInstalled) {\r\n\t\t\treturn <ConnectButton\r\n\t\t\t\twalletName={walletName}\r\n\t\t\t\tonClick={() => window.open(connector.installUrl, '_blank')!.focus()}\r\n\t\t\t\twalletIcon={icon}\r\n\t\t\t\tlabelText=\"Install\"\r\n\t\t\t/>\r\n\t\t}\r\n\r\n\t\treturn <ConnectButton\r\n\t\t\twalletName={walletName}\r\n\t\t\tonClick={() => connectAndClose(chainId, cnnName)}\r\n\t\t\twalletIcon={icon}\r\n\t\t\tlabelText=\"Connect\"\r\n\t\t/>\r\n\r\n\t}\r\n\r\n\tconst renderChainBtn = (supportedChain: IChain) => {\r\n\r\n\t\tconst { chainId } = supportedChain\r\n\t\r\n\t\treturn <Col flex={3} key={chainId}>\r\n\t\t\t<ChainButtonWithLogic\r\n\t\t\t\tonClick={() => switchChainAndClose(chainId)}\r\n\t\t\t\tloading={loading}\r\n\t\t\t\texpectedChainId={expectedChainId}\r\n\t\t\t\tconnectedChainId={chain.chainId}\r\n\t\t\t\tcanSwitchChain={canSwitchChain}\r\n\t\t\t\tchain={supportedChain} />\r\n\t\t</Col>\r\n\t\r\n\t}\r\n\r\n\tconst btnGutter: [Gutter, Gutter] = [10, 0]\r\n\r\n\tconst _onCancel = () => {\r\n\t\tonClose && onClose()\r\n\t\tonCancel && onCancel()\r\n\t}\r\n\t\r\n\treturn <OortModal \r\n\t\tloading={loading}\r\n\t\tfooter={footer}\r\n\t\tclassName={styles.modal}\r\n\t\ttitle='Network & Wallet'\r\n\t\twidth=\"690px\"\r\n\t\tvisible={visible} onCancel={() => _onCancel()}>\r\n\t\t<>\r\n\t\t\t{\r\n\t\t\t\t!isChainEmpty(chain) && <>\r\n\t\t\t\t\t<div className={styles.description}>\r\n\t\t\t\t\t\t<Alert account={account} chain={chain} supportedChains={supportedChains} expectedChainId={expectedChainId} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Row gutter={btnGutter} className={styles.chain_buttons} justify='space-between'>\r\n\t\t\t\t\t\t{supportedChains.map(x => renderChainBtn(x))}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t\t<div className={styles.description}>\r\n\t\t\t\t<Bold>Connect your Wallet</Bold> and jump into the world of NFT's\r\n\t\t\t</div>\r\n\t\t\t<Row gutter={btnGutter} justify='space-between'>\r\n\t\t\t\t<Col span={12}>{renderWalletBtn(supportedChains[0].chainId, \"Metamask\", ConnectorNames.Injected, MetamaskIcon)}</Col>\r\n\t\t\t\t<Col span={12}>{renderWalletBtn(supportedChains[0].chainId, \"WalletConnect\", ConnectorNames.WalletConnect, WalletConnectIcon)}</Col>\r\n\t\t\t</Row>\r\n\t\t</>\r\n\t</OortModal>\r\n\t\t\r\n\t\r\n};\r\n\r\nexport default ConnectModalDesktop\r\n"],"names":["ConnectModalDesktop","web3","onCancel","visible","onClose","afterChainSwitch","afterConnect","expectedChainId","loading","setLoading","useState","supportedChains","chain","switchChain","canSwitchChain","connect","account","connectorName","supportedConnectors","connectAndClose","chainId","cnnName","switchChainAndClose","newChainId","footer","_Fragment","_jsxs","_jsx","renderWalletBtn","walletName","icon","ConnectButton","connector","isInstalled","window","open","installUrl","focus","renderChainBtn","supportedChain","Col","ChainButtonWithLogic","btnGutter","_onCancel","OortModal","styles","modal","isChainEmpty","description","Alert","Row","chain_buttons","map","x","Bold","ConnectorNames","Injected","MetamaskIcon","WalletConnect","WalletConnectIcon"],"mappings":"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"}