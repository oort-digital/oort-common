{"version":3,"file":"connectModalMobile.b44fb95d.mjs","sources":["../src/connectModal/connectModalMobile.tsx"],"sourcesContent":["import { ReactNode, useState } from 'react'\r\nimport { Col, Row } from 'antd'\r\nimport \"./connectModalMobile.less\"\r\n\r\nimport { ConnectButton } from './connectButton';\r\nimport { MetamaskIcon } from './metamaskIcon';\r\nimport { WalletConnectIcon } from './walletConnectIcon';\r\nimport { Gutter } from 'antd/lib/grid/row';\r\nimport { ChainButton } from './chainButton';\r\nimport { ConnectorNames } from \"@oort/web3-connectors\";\r\nimport { IChain } from '../typesAndInterfaces';\r\nimport { OortModalMobile } from '../oortModal';\r\nimport { IWeb3 } from './connectModal';\r\n\r\n\r\nexport enum WALLETTYPE {\r\n\tWALLET_METAMASK,\r\n\tWALLET_CONNECT,\r\n}\r\n\r\nconst renderAlert = (account: string, chain: IChain, supportedChains: IChain[]) => {\r\n\r\n\tif (!account) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tif (!supportedChains.some(x => x.name === chain!.name)) {\r\n\t\treturn <>\r\n\t\t\tYou connected to <span>{chain!.name}.</span>\r\n\t\t\t<div>\r\n\t\t\t\tPlease connect to the appropriate network. <span>{supportedChains.map(x => x.name).join(', ')}</span>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t}\r\n\r\n\treturn <>\r\n\tYou are currently using <span>Oort Digital</span> on the <span>{chain!.name}</span> network\r\n\t</>\r\n};\r\n\r\n\r\ninterface IProps {\r\n\tweb3: IWeb3\r\n\tvisible: boolean\r\n\t/**\r\n\t * @deprecated Use onClose, afterConnect, afterChainSwitch\r\n\t */\r\n\tonCancel?: () => void\r\n\r\n\t/** executed when user click 'X' in the top right corner */\r\n\tonClose?: () => void\r\n\tafterConnect?: () => void\r\n\tafterChainSwitch?: () => void\r\n}\r\n\r\nconst ConnectModalMobile = ({ web3, visible, onCancel, onClose, afterConnect, afterChainSwitch }: IProps) => {\r\n\r\n\tconst [ loading, setLoading ] = useState(false)\r\n\t\r\n\tconst { supportedChains, chain, switchChain, canSwitchChain, connectAsync, account, connectorName, supportedConnectors } = web3\r\n\r\n\tconst connectAndClose = async (cnnName: ConnectorNames) => {\r\n\t\tsetLoading(true)\r\n        try {\r\n            await connectAsync(cnnName)\r\n\t\t\tonCancel && onCancel()\r\n\t\t\tafterConnect && afterConnect()\r\n        }\r\n        finally {\r\n            setLoading(false)\r\n        }\r\n\t}\r\n\r\n\tconst switchChainAndClose = async (newChainId: number): Promise<void> => {\t\t\r\n        setLoading(true)\r\n        try {\r\n            await switchChain(newChainId)\r\n\t\t\tonCancel && onCancel()\r\n\t\t\tafterChainSwitch && afterChainSwitch()\r\n        }\r\n        finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n\tconst footer = <>\r\n\t\tBy connecting, I accept Oort Digitalâ€™s <a href='https://oort.digital/terms'>Terms of Service</a> and acknowledge that you have read and understand the <a href='https://oort.digital/terms#disclaimer'>Oort Digital protocol disclaimer</a>\r\n\t</>\r\n\r\n\tconst renderWalletBtn = (walletName: string, cnnName: ConnectorNames, icon: ReactNode) => {\r\n\r\n\t\tif(account && cnnName === connectorName) {\r\n\t\t\treturn <ConnectButton\r\n\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\twalletName={walletName}\r\n\t\t\t\t\twalletIcon={icon}\r\n\t\t\t\t\taccount={account}/>\r\n\t\t}\r\n\r\n\t\tconst connector = supportedConnectors[cnnName]\r\n\t\tif(!connector.isInstalled) {\r\n\t\t\treturn <ConnectButton\r\n\t\t\t\twalletName={walletName}\r\n\t\t\t\tonClick={() => window.open(connector.installUrl, '_blank')!.focus()}\r\n\t\t\t\twalletIcon={icon}\r\n\t\t\t\tlabelText=\"Install\"\r\n\t\t\t/>\r\n\t\t}\r\n\r\n\t\treturn <ConnectButton\r\n\t\t\twalletName={walletName}\r\n\t\t\tonClick={() => connectAndClose(cnnName)}\r\n\t\t\twalletIcon={icon}\r\n\t\t\tlabelText=\"Connect\"\r\n\t\t/>\r\n\r\n\t}\r\n\r\n\tconst renderChainBtn = (supportedChain: IChain) => {\r\n\r\n\t\tconst { chainId } = supportedChain\r\n\t\r\n\t\treturn <Col span=\"24\" key={chainId}>\r\n\t\t\t<ChainButton\r\n\t\t\t\tonClick={() => switchChainAndClose(chainId)}\r\n\t\t\t\tloading={loading}\r\n\t\t\t\tisActive={chainId === chain!.chainId}\r\n\t\t\t\tcanSwitchChain={canSwitchChain}\r\n\t\t\t\tchain={supportedChain} />\r\n\t\t</Col>\r\n\t\r\n\t}\r\n\r\n\tconst btnGutter: [Gutter, Gutter] = [0, 12]\r\n\r\n\tconst _onCancel = () => {\r\n\t\tonClose && onClose()\r\n\t\tonCancel && onCancel()\r\n\t}\r\n\t\r\n\treturn <OortModalMobile viewMode=\"topGap\" loading={loading} footer={footer}\r\n\t\tclassName='connect-wallet-mobile-modal' title='Network & Wallet' visible={visible}\r\n\t\tonCancel={() => _onCancel()}>\r\n\t\t<>\r\n\t\t\t{\r\n\t\t\t\tchain && <>\r\n\t\t\t\t\t<div className=\"description\">\r\n\t\t\t\t\t\t{renderAlert(account, chain, supportedChains)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Row gutter={btnGutter} className='chain-buttons'>\r\n\t\t\t\t\t\t{supportedChains.map(x => renderChainBtn(x))}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t\t<div className=\"description\">\r\n\t\t\t\t<span>Connect your Wallet</span> and jump into the world of NFT's\r\n\t\t\t</div>\r\n\t\t\t<Row gutter={btnGutter}>\r\n\t\t\t\t{window.ethereum && <Col span=\"24\">{renderWalletBtn(\"Metamask\", ConnectorNames.Injected, MetamaskIcon)}</Col>}\r\n\t\t\t\t<Col span=\"24\">{renderWalletBtn(\"WalletConnect\", ConnectorNames.WalletConnect, WalletConnectIcon)}</Col>\r\n\t\t\t</Row>\r\n\t\t</>\r\n\t</OortModalMobile>\r\n\t\t\r\n\t\r\n};\r\n\r\nexport default ConnectModalMobile"],"names":["WALLETTYPE","WALLET_METAMASK","WALLET_CONNECT","renderAlert","account","chain","supportedChains","some","x","name","_Fragment","_jsx","_jsxs","map","join","ConnectModalMobile","web3","visible","onCancel","onClose","afterConnect","afterChainSwitch","loading","setLoading","useState","switchChain","canSwitchChain","connectAsync","connectorName","supportedConnectors","connectAndClose","cnnName","switchChainAndClose","newChainId","footer","renderWalletBtn","walletName","icon","ConnectButton","connector","isInstalled","window","open","installUrl","focus","renderChainBtn","supportedChain","chainId","Col","ChainButton","btnGutter","_onCancel","OortModalMobile","Row","ethereum","ConnectorNames","Injected","MetamaskIcon","WalletConnect","WalletConnectIcon"],"mappings":"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"}