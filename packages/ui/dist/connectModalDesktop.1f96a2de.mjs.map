{"version":3,"file":"connectModalDesktop.1f96a2de.mjs","sources":["../src/connectModal/connectModalDesktop.tsx"],"sourcesContent":["import { ReactNode, useState } from 'react'\r\nimport { IChain, isChainEmpty } from \"../typesAndInterfaces\"\r\nimport { Col, Row } from 'antd'\r\nimport styles from \"./connectModalDesktop.module.less\"\r\nimport { ConnectButton } from './connectButton';\r\nimport { MetamaskIcon } from './metamaskIcon';\r\nimport { WalletConnectIcon } from './walletConnectIcon';\r\nimport { Gutter } from 'antd/lib/grid/row';\r\nimport { ConnectorNames } from '@oort/web3-connectors';\r\nimport { OortModal } from '../oortModal';\r\nimport { IWeb3 } from './connectModal';\r\nimport { ChainButtonWithLogic } from './chainButtonWithLogic';\r\nimport { Alert } from './alert';\r\nimport { Bold } from './bold';\r\n\r\ninterface IProps {\r\n\tweb3: IWeb3\r\n\texpectedChainId?: number\r\n\tvisible: boolean\r\n\t /**\r\n     * @deprecated Use onClose, afterConnect, afterChainSwitch\r\n     */\r\n\tonCancel?: () => void\r\n\r\n\t/** executed when user click 'X' in the top right corner */\r\n\tonClose?: () => void\r\n\tafterConnect?: () => void\r\n\tafterChainSwitch?: () => void\r\n}\r\n\r\nconst ConnectModalDesktop = ({ web3, onCancel, visible, onClose, afterChainSwitch, afterConnect, expectedChainId }: IProps) => {\r\n\r\n\tconst [ loading, setLoading ] = useState(false)\r\n\tconst {  supportedChains, chain, switchChain, canSwitchChain, connectAsync, account, connectorName, supportedConnectors } = web3\r\n\t\r\n\tconst connectAndClose = async (cnnName: ConnectorNames) => {\r\n\t\tsetLoading(true)\r\n        try {\r\n            await connectAsync(cnnName)\r\n\t\t\tonCancel && onCancel()\r\n\t\t\tafterConnect && afterConnect()\r\n        }\r\n        finally {\r\n            setLoading(false)\r\n        }\r\n\t}\r\n\r\n\tconst switchChainAndClose = async (newChainId: number): Promise<void> => {\t\t\r\n        setLoading(true)\r\n        try {\r\n            await switchChain(newChainId)\r\n\t\t\tonCancel && onCancel()\r\n\t\t\tafterChainSwitch && afterChainSwitch()\r\n        }\r\n        finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n\tconst footer = <>\r\n\t\t<div>By connecting, I accept Oort Digitalâ€™s <a href='https://oort.digital/terms'>Terms of Service</a> and acknowledge</div>\r\n\t\t<div>that you have read and understand the <a href='https://oort.digital/terms#disclaimer'>Oort Digital protocol disclaimer</a></div>\r\n\t</>\r\n\r\n\tconst renderWalletBtn = (walletName: string, cnnName: ConnectorNames, icon: ReactNode) => {\r\n\r\n\t\tif(account && cnnName === connectorName) {\r\n\t\t\treturn <ConnectButton\r\n\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\twalletName={walletName}\r\n\t\t\t\t\twalletIcon={icon}\r\n\t\t\t\t\taccount={account}/>\r\n\t\t}\r\n\r\n\t\tconst connector = supportedConnectors[cnnName]\r\n\t\tif(!connector.isInstalled) {\r\n\t\t\treturn <ConnectButton\r\n\t\t\t\twalletName={walletName}\r\n\t\t\t\tonClick={() => window.open(connector.installUrl, '_blank')!.focus()}\r\n\t\t\t\twalletIcon={icon}\r\n\t\t\t\tlabelText=\"Install\"\r\n\t\t\t/>\r\n\t\t}\r\n\r\n\t\treturn <ConnectButton\r\n\t\t\twalletName={walletName}\r\n\t\t\tonClick={() => connectAndClose(cnnName)}\r\n\t\t\twalletIcon={icon}\r\n\t\t\tlabelText=\"Connect\"\r\n\t\t/>\r\n\r\n\t}\r\n\r\n\tconst renderChainBtn = (supportedChain: IChain) => {\r\n\r\n\t\tconst { chainId } = supportedChain\r\n\t\r\n\t\treturn <Col flex={3} key={chainId}>\r\n\t\t\t<ChainButtonWithLogic\r\n\t\t\t\tonClick={() => switchChainAndClose(chainId)}\r\n\t\t\t\tloading={loading}\r\n\t\t\t\texpectedChainId={expectedChainId}\r\n\t\t\t\tconnectedChainId={chain.chainId}\r\n\t\t\t\tcanSwitchChain={canSwitchChain}\r\n\t\t\t\tchain={supportedChain} />\r\n\t\t</Col>\r\n\t\r\n\t}\r\n\r\n\tconst btnGutter: [Gutter, Gutter] = [10, 0]\r\n\r\n\tconst _onCancel = () => {\r\n\t\tonClose && onClose()\r\n\t\tonCancel && onCancel()\r\n\t}\r\n\t\r\n\treturn <OortModal \r\n\t\tloading={loading}\r\n\t\tfooter={footer}\r\n\t\tclassName={styles.modal}\r\n\t\ttitle='Network & Wallet'\r\n\t\twidth=\"690px\"\r\n\t\tvisible={visible} onCancel={() => _onCancel()}>\r\n\t\t<>\r\n\t\t\t{\r\n\t\t\t\t!isChainEmpty(chain) && <>\r\n\t\t\t\t\t<div className={styles.description}>\r\n\t\t\t\t\t\t<Alert account={account} chain={chain} supportedChains={supportedChains} expectedChainId={expectedChainId} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Row gutter={btnGutter} className={styles.chain_buttons} justify='space-between'>\r\n\t\t\t\t\t\t{supportedChains.map(x => renderChainBtn(x))}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t\t<div className={styles.description}>\r\n\t\t\t\t<Bold>Connect your Wallet</Bold> and jump into the world of NFT's\r\n\t\t\t</div>\r\n\t\t\t<Row gutter={btnGutter} justify='space-between'>\r\n\t\t\t\t<Col span={12}>{renderWalletBtn(\"Metamask\", ConnectorNames.Injected, MetamaskIcon)}</Col>\r\n\t\t\t\t<Col span={12}>{renderWalletBtn(\"WalletConnect\", ConnectorNames.WalletConnect, WalletConnectIcon)}</Col>\r\n\t\t\t</Row>\r\n\t\t</>\r\n\t</OortModal>\r\n\t\t\r\n\t\r\n};\r\n\r\nexport default ConnectModalDesktop\r\n"],"names":["ConnectModalDesktop","web3","onCancel","visible","onClose","afterChainSwitch","afterConnect","expectedChainId","loading","setLoading","useState","supportedChains","chain","switchChain","canSwitchChain","connectAsync","account","connectorName","supportedConnectors","connectAndClose","cnnName","switchChainAndClose","newChainId","footer","_Fragment","_jsxs","_jsx","renderWalletBtn","walletName","icon","ConnectButton","connector","isInstalled","window","open","installUrl","focus","renderChainBtn","supportedChain","chainId","Col","ChainButtonWithLogic","btnGutter","_onCancel","OortModal","styles","modal","isChainEmpty","description","Alert","Row","chain_buttons","map","x","Bold","ConnectorNames","Injected","MetamaskIcon","WalletConnect","WalletConnectIcon"],"mappings":"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"}