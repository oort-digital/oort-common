{"version":3,"file":"index.cjs.js","sources":["../src/index.ts"],"sourcesContent":["export enum LogLevel {\r\n    Trace =\t0,\r\n    Debug =\t1,\r\n    Info = 2,\r\n    Warn = 3,\r\n    Error = 4\r\n}\r\n\r\nexport interface ILogger {\r\n    log: (level: LogLevel, message: string) => void\r\n    trace: (message: string) => void\r\n    debug: (message: string) => void\r\n    info: (message: string) => void\r\n    warn: (message: string) => void\r\n    error: (message: any) => void\r\n};\r\n\r\nclass ConsoleLogger implements ILogger {\r\n\r\n    private readonly _curLogLevel: LogLevel\r\n\r\n    constructor(logLevel: LogLevel = LogLevel.Info) {\r\n        this._curLogLevel = logLevel\r\n    }\r\n   \r\n    log = (level: LogLevel, message: any) => {\r\n        if(level >= this._curLogLevel) {\r\n            const messageWithLayout = `${new Date(Date.now()).toISOString()} ${message}`\r\n            switch(level) {\r\n                case LogLevel.Error:\r\n                    console.error(messageWithLayout)\r\n                    break;\r\n                case LogLevel.Warn:\r\n                    console.warn(messageWithLayout)\r\n                    break;\r\n                case LogLevel.Info:\r\n                    console.info(messageWithLayout)\r\n                    break;\r\n                case LogLevel.Debug:\r\n                    console.log(messageWithLayout)\r\n                    break;\r\n                case LogLevel.Trace:\r\n                    console.trace(messageWithLayout)\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    trace = (message: string) => this.log(LogLevel.Trace, message)\r\n    debug = (message: string) => this.log(LogLevel.Debug, message)\r\n    info = (message: string) => this.log(LogLevel.Info, message)\r\n    warn = (message: string) => this.log(LogLevel.Warn, message)\r\n    error = (message: any) => this.log(LogLevel.Error, message)\r\n}\r\n\r\n\r\nconst parseLogLevel = (str: string): LogLevel => {\r\n    str = str.toLowerCase()\r\n    if(str === \"trace\") { return LogLevel.Trace }\r\n    if(str === \"debug\") { return LogLevel.Debug }\r\n    if(str === \"info\") { return LogLevel.Info }\r\n    if(str === \"warn\") { return LogLevel.Warn }\r\n    if(str === \"error\") { return LogLevel.Error }\r\n    throw new Error(`Unknown LogLevel: ${str}`)\r\n}\r\n\r\nconst LOG_LEVEL_KEY = 'logLevel'\r\nfunction getCurLogLevel(): LogLevel {\r\n    let str: string | null = localStorage.getItem(LOG_LEVEL_KEY)\r\n    if(str) {\r\n        return parseLogLevel(str)\r\n    }\r\n    let result: LogLevel = LogLevel.Info;\r\n    localStorage.setItem(LOG_LEVEL_KEY, LogLevel[result].toLowerCase())\r\n    return result\r\n}\r\n\r\nexport const logger: ILogger = new ConsoleLogger(getCurLogLevel())"],"names":[],"mappings":";;;;AAAU,IAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAa,MAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;;;;;"}