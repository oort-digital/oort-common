{"version":3,"file":"index.umd.js","sources":["../src/index.ts"],"sourcesContent":["export enum LogLevel {\n    Trace =\t0,\n    Debug =\t1,\n    Info = 2,\n    Warn = 3,\n    Error = 4\n}\n\nexport interface ILogger {\n    log: (level: LogLevel, message: string) => void\n    trace: (message: string) => void\n    debug: (message: string) => void\n    info: (message: string) => void\n    warn: (message: string) => void\n    error: (message: any) => void\n};\n\nclass ConsoleLogger implements ILogger {\n\n    private readonly _curLogLevel: LogLevel\n\n    constructor(logLevel: LogLevel = LogLevel.Info) {\n        this._curLogLevel = logLevel\n    }\n   \n    log = (level: LogLevel, message: any) => {\n        if(level >= this._curLogLevel) {\n            const messageWithLayout = `${new Date(Date.now()).toISOString()} ${message}`\n            switch(level) {\n                case LogLevel.Error:\n                    console.error(messageWithLayout)\n                    break;\n                case LogLevel.Warn:\n                    console.warn(messageWithLayout)\n                    break;\n                case LogLevel.Info:\n                    console.info(messageWithLayout)\n                    break;\n                case LogLevel.Debug:\n                    console.log(messageWithLayout)\n                    break;\n                case LogLevel.Trace:\n                    console.trace(messageWithLayout)\n                    break;\n            }\n        }\n    }\n\n    trace = (message: string) => this.log(LogLevel.Trace, message)\n    debug = (message: string) => this.log(LogLevel.Debug, message)\n    info = (message: string) => this.log(LogLevel.Info, message)\n    warn = (message: string) => this.log(LogLevel.Warn, message)\n    error = (message: any) => this.log(LogLevel.Error, message)\n}\n\n\nconst parseLogLevel = (str: string): LogLevel => {\n    str = str.toLowerCase()\n    if(str === \"trace\") { return LogLevel.Trace }\n    if(str === \"debug\") { return LogLevel.Debug }\n    if(str === \"info\") { return LogLevel.Info }\n    if(str === \"warn\") { return LogLevel.Warn }\n    if(str === \"error\") { return LogLevel.Error }\n    throw new Error(`Unknown LogLevel: ${str}`)\n}\n\nconst LOG_LEVEL_KEY = 'logLevel'\nfunction getCurLogLevel(): LogLevel {\n    let str: string | null = localStorage.getItem(LOG_LEVEL_KEY)\n    if(str) {\n        return parseLogLevel(str)\n    }\n    let result: LogLevel = LogLevel.Info;\n    localStorage.setItem(LOG_LEVEL_KEY, LogLevel[result].toLowerCase())\n    return result\n}\n\nexport const logger: ILogger = new ConsoleLogger(getCurLogLevel())"],"names":[],"mappings":";;;;;;AAAU,OAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAa,MAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;;;;;;;;;;;"}