{"version":3,"file":"index.umd.js","sources":["../src/serializers.ts","../src/searchParams.ts"],"sourcesContent":["import { NumOrUndef, NumRange } from \"./typesAndInterfaces\"\r\n\r\nexport interface ISerializer<T> {\r\n    key: string\r\n    serialize: (paramVal: T) => string[]\r\n    deserialize: (paramStr: string[]) => T\r\n}\r\n\r\nexport class StringSerializer implements ISerializer<string> {\r\n\r\n    readonly key: string\r\n    serialize = (paramVal: string) => [paramVal]\r\n    deserialize = (params: string[]) => params[0]\r\n\r\n    constructor(key: string) {\r\n        this.key = key\r\n    }\r\n}\r\n\r\nexport class BoolSerializer implements ISerializer<boolean> {\r\n\r\n    readonly key: string\r\n    serialize = (paramVal: boolean) => [`${paramVal}`]\r\n    deserialize = (params: string[]) => params[0] === 'true'\r\n\r\n    constructor(key: string) {\r\n        this.key = key\r\n    }\r\n}\r\n\r\nexport class IntSerializer implements ISerializer<number> {\r\n\r\n    readonly key: string\r\n    serialize = (paramVal: number) => [paramVal.toString()]\r\n    deserialize = (params: string[]) => parseInt(params[0])\r\n\r\n    constructor(key: string) {\r\n        this.key = key\r\n    }\r\n}\r\n\r\nexport class NumRangeSerializer implements ISerializer<NumRange> {\r\n\r\n    private static sep = '-'\r\n\r\n    readonly key: string\r\n\r\n    serialize = (paramVal: NumRange) => {\r\n        let result = ''\r\n        if(NumRangeSerializer.isDefined(paramVal[0])) {\r\n            result = paramVal[0]!.toString()\r\n        }\r\n        \r\n        if(NumRangeSerializer.isDefined(paramVal[1])) {\r\n            result = `${result}${NumRangeSerializer.sep}${paramVal[1]!.toString()}`\r\n        }\r\n        return [result]\r\n    }\r\n\r\n    deserialize = (params: string[]): NumRange => {\r\n        const arr = params[0].split(NumRangeSerializer.sep)\r\n        if(arr.length === 1) {\r\n            return [NumRangeSerializer.deserializeItem(arr[0]), undefined]\r\n        }\r\n        return [NumRangeSerializer.deserializeItem(arr[0]), NumRangeSerializer.deserializeItem(arr[1])]\r\n    }\r\n    \r\n    constructor(key: string) {\r\n        this.key = key\r\n    }\r\n\r\n    private static deserializeItem(str: string | undefined): NumOrUndef {\r\n        if(str) {\r\n            return parseFloat(str)\r\n        }\r\n        return undefined\r\n    }\r\n\r\n    private static isDefined(val: NumOrUndef): boolean {\r\n        //null value happens too\r\n        return val !== undefined && val !== null\r\n    }\r\n}\r\n\r\nexport class ArraySerializer<T> implements ISerializer<T[]> {\r\n\r\n    readonly key: string\r\n\r\n    constructor(key: string, parseFunc: (str: string) => T) {\r\n        this.key = key\r\n        this._parseFunc = parseFunc\r\n    }\r\n\r\n    serialize(arr: T[]): string[] {\r\n        const p =  arr.join(this._sep)\r\n        return [p]\r\n    }\r\n\r\n    deserialize(params: string[]): T[] {\r\n        return params[0].split(this._sep).map(x => this._parseFunc(x))\r\n    }\r\n\r\n    private readonly _sep = '-'\r\n    private readonly _parseFunc: (str: string) => T\r\n}","import { ArraySerializer, BoolSerializer, IntSerializer, ISerializer, NumRangeSerializer } from \"./serializers\";\r\nimport { NumRange, URLSearchParamsSetter } from \"./typesAndInterfaces\";\r\n\r\nexport abstract class BaseSearchParam<T> {\r\n\r\n    get param() { return this._param }\r\n\r\n    get isEmpty() { return this.isParamEmpty(this._param) }\r\n\r\n    protected isParamEmpty(paramVal: T) {\r\n        if(Array.isArray(paramVal)) {\r\n            return paramVal.length === 0\r\n        }\r\n        return !paramVal\r\n    }\r\n\r\n    clear() {\r\n        this._param = this._def\r\n        this._searchParams.delete(this._serializer.key)\r\n        this._setter(this._searchParams)\r\n    }\r\n\r\n    setParam(paramVal: T) {\r\n        this._param = paramVal\r\n        this._searchParams.delete(this._serializer.key)\r\n\r\n        if(!this.isParamEmpty(paramVal)) {\r\n            const params = this._serializer.serialize(paramVal)\r\n            params.forEach(p => this._searchParams.append(this._serializer.key, p))\r\n        }\r\n\r\n        this._setter(this._searchParams)\r\n    }\r\n    \r\n    constructor(searchParams: URLSearchParams, setter: URLSearchParamsSetter, serializer: ISerializer<T>, def: T) {\r\n        this._searchParams = searchParams\r\n        this._setter = setter\r\n        this._serializer = serializer\r\n        const params = searchParams.getAll(serializer.key)\r\n        this._def = def\r\n        this._param = params.length ? serializer.deserialize(params) : def\r\n    }\r\n\r\n    private readonly _def\r\n    private readonly _searchParams: URLSearchParams\r\n    private readonly _setter: URLSearchParamsSetter\r\n    private readonly _serializer: ISerializer<T>\r\n    private _param: T\r\n}\r\n\r\nconst isNumRangeNotEmpty = (range: NumRange) => range[0] !== undefined || range[1] !== undefined\r\n\r\nexport class NumRangeSearchParam extends BaseSearchParam<NumRange> {\r\n    protected isParamEmpty = (paramVal: NumRange) => !isNumRangeNotEmpty(paramVal)\r\n\r\n    constructor(key: string, searchParams: URLSearchParams, setter: URLSearchParamsSetter) {\r\n        super(searchParams, setter, new NumRangeSerializer(key), [undefined, undefined])\r\n    }\r\n}\r\n\r\nexport class IntArrSearchParam extends BaseSearchParam<number[]> {\r\n    constructor(key: string, searchParams: URLSearchParams, setter: URLSearchParamsSetter) {\r\n        super(searchParams, setter, new ArraySerializer<number>(key, parseInt), [])\r\n    }\r\n}\r\n\r\nexport class StrArrSearchParam extends BaseSearchParam<string[]> {\r\n    constructor(key: string, searchParams: URLSearchParams, setter: URLSearchParamsSetter) {\r\n        super(searchParams, setter, new ArraySerializer<string>(key, x => x), [])\r\n    }\r\n}\r\n\r\nexport class IntSearchParam extends BaseSearchParam<number> {\r\n    constructor(key: string, defaultValue: number, searchParams: URLSearchParams, setter: URLSearchParamsSetter) {\r\n        super(searchParams, setter, new IntSerializer(key), defaultValue)\r\n    }\r\n}\r\n\r\nexport class BoolSearchParam extends BaseSearchParam<boolean> {\r\n    constructor(key: string, defaultValue: boolean, searchParams: URLSearchParams, setter: URLSearchParamsSetter) {\r\n        super(searchParams, setter, new BoolSerializer(key), defaultValue)\r\n    }\r\n}"],"names":["h","n","c","m"],"mappings":"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"}