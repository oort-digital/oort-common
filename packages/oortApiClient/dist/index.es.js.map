{"version":3,"file":"index.es.js","sources":["../src/isAuthRequest.ts","../src/oortClient.ts","../src/typesAndInterfaces.ts"],"sourcesContent":["import { AxiosRequestConfig } from \"axios\"\r\n\r\nexport type TokenType = string | null\r\n\r\nexport interface AxiosRequestConfigExtended<D = any> extends AxiosRequestConfig<D> {\r\n    isAuthRequest: boolean | undefined\r\n}\r\n\r\nexport function toAuthRequest<D = any>(req: AxiosRequestConfig<D>): AxiosRequestConfigExtended<D> {\r\n    const reqExtended = req as AxiosRequestConfigExtended<D>\r\n    reqExtended.isAuthRequest = true\r\n    return reqExtended\r\n}","import axios, {AxiosRequestConfig, AxiosResponse} from \"axios\"\r\nimport { toAuthRequest } from \"./isAuthRequest\"\r\n\r\nimport {\r\n    ICurUserReview,\r\n    IDasboardResponse, IGameDetailParams, IGameDetailResponse,\r\n    IGamesParams, IGamesResponse, ILikeGameParams, ILikeReviewParams, INftDetailByAddressParams, INftDetailParams, INftDetailResponse,\r\n    INftsParams,\r\n    INftsResponse,\r\n    IOortClient,\r\n    IOortClientSettings, IPagingParams, IReviewResponse, IReviewsParams, ISaveFeedbackParams, ISaveReviewParams, ISearchParams, ISearchResultResponse\r\n} from \"./typesAndInterfaces\"\r\n\r\n\r\nfunction getConfig(isAuth: boolean, signal: AbortSignal, params?: URLSearchParams): AxiosRequestConfig<any> {\r\n\r\n    const config: AxiosRequestConfig<any> = { signal: signal }\r\n\r\n    if(params) {\r\n        config.params = params\r\n    }\r\n\r\n    return isAuth ? toAuthRequest(config) : config\r\n}\r\n\r\nexport class OortClient implements IOortClient {\r\n\r\n    dashboard = async (signal: AbortSignal): Promise<IDasboardResponse> => {\r\n        const response: AxiosResponse<IDasboardResponse> = await axios.get<IDasboardResponse, AxiosResponse<IDasboardResponse>>(`${this._apiUrl}/dashboard/`, { signal: signal })\r\n        return response.data\r\n    }\r\n\r\n    nfts = async ({pageNum, pageSize, chains, keywords, games, twitterFollowersRange, discordFollowersRange, floorPriceRange, marketCapRange, volumeRange, tradersRange, totalSupplyRange, orders, orderDirections, gamesOnly}: INftsParams, signal: AbortSignal): Promise<INftsResponse> => {\r\n        const urlParams = new URLSearchParams([\r\n            ['filter-games', `${gamesOnly}`]\r\n        ]);\r\n\r\n        this.addPagingParams({ pageNum, pageSize }, urlParams)\r\n\r\n        if(keywords) {\r\n            urlParams.append('keywords', `${keywords}`)\r\n        }\r\n\r\n        this.addArrParam(urlParams, 'block-chains', chains)\r\n        this.addArrParam(urlParams, 'game-ids', games)\r\n\r\n        if (twitterFollowersRange && twitterFollowersRange[0] && twitterFollowersRange[1]) {\r\n            urlParams.append('number-filter-starts', twitterFollowersRange[0].toString());\r\n            urlParams.append('number-filter-ends', twitterFollowersRange[1].toString());\r\n            urlParams.append('number-filters', \"twitterFollowers\");\r\n        }\r\n\r\n        if (discordFollowersRange && discordFollowersRange[0] && discordFollowersRange[1]) {\r\n            urlParams.append('number-filter-starts', discordFollowersRange[0].toString());\r\n            urlParams.append('number-filter-ends', discordFollowersRange[1].toString());\r\n            urlParams.append('number-filters', \"discordFollowers\");\r\n        }\r\n\r\n        if (floorPriceRange && floorPriceRange[0] && floorPriceRange[1]) {\r\n            urlParams.append('number-filter-starts', floorPriceRange[0].toString());\r\n            urlParams.append('number-filter-ends', floorPriceRange[1].toString());\r\n            urlParams.append('number-filters', \"floorPrice\");\r\n        }\r\n\r\n        if (volumeRange && volumeRange[0] && volumeRange[1]) {\r\n            urlParams.append('number-filter-starts', volumeRange[0].toString());\r\n            urlParams.append('number-filter-ends', volumeRange[1].toString());\r\n            urlParams.append('number-filters', \"volume\");\r\n        }\r\n\r\n        if (marketCapRange && marketCapRange[0] && marketCapRange[1]) {\r\n            urlParams.append('number-filter-starts', marketCapRange[0].toString());\r\n            urlParams.append('number-filter-ends', marketCapRange[1].toString());\r\n            urlParams.append('number-filters', \"marketCap\");\r\n        }\r\n\r\n        if (tradersRange && tradersRange[0] && tradersRange[1]) {\r\n            urlParams.append('number-filter-starts', tradersRange[0].toString());\r\n            urlParams.append('number-filter-ends', tradersRange[1].toString());\r\n            urlParams.append('number-filters', \"traders\");\r\n        }\r\n\r\n        if (totalSupplyRange && totalSupplyRange[0] && totalSupplyRange[1]) {\r\n            urlParams.append('number-filter-starts', totalSupplyRange[0].toString());\r\n            urlParams.append('number-filter-ends', totalSupplyRange[1].toString());\r\n            urlParams.append('number-filters', \"totalSupply\");\r\n        }\r\n\r\n        if (orders && orders.length && orderDirections && orderDirections.length) {\r\n            this.addArrParam(urlParams, 'orders', orders);\r\n            this.addArrParam(urlParams, 'order-directions', orderDirections);\r\n        }\r\n\r\n        const response: AxiosResponse<INftsResponse> =\r\n            await axios.get<INftsResponse, AxiosResponse<INftsResponse>>(\r\n                `${this._apiUrl}/game-hub/nft-collections`,\r\n                {params: urlParams, signal: signal})\r\n\r\n        if(signal.aborted) {\r\n            return {\r\n                dataList: [],\r\n                pageNum: 0,\r\n                pageSize: 0,\r\n                totalPage: 0,\r\n                totalNum: 0\r\n            }\r\n        }\r\n\r\n        return response.data\r\n    }\r\n\r\n    games = async ({pageNum, pageSize, chains, collectionIds, keywords, devices, status, genre, ratingRange, orders, orderDirections}: IGamesParams, signal: AbortSignal): Promise<IGamesResponse> => {\r\n        const urlParams = this.addPagingParams({ pageNum, pageSize })\r\n\r\n        if(keywords) {\r\n            urlParams.append('keywords', keywords)\r\n        }\r\n\r\n        if (collectionIds && collectionIds.length) {\r\n            this.addArrParam(urlParams, 'nft-collection-ids', collectionIds);\r\n        }\r\n\r\n        const stringFilters: string[] = []\r\n        const stringValues: string[] = []\r\n\r\n        const addFilter = (name: string, values: string[]) => {\r\n            if(values.length) {\r\n                stringFilters.push(name)\r\n                stringValues.push(values.join(','))\r\n            }\r\n        }\r\n        \r\n        addFilter('devices', devices)\r\n        addFilter('status', status)\r\n        addFilter('genre', genre)\r\n\r\n        if (stringFilters.length && stringValues.length) {\r\n            this.addArrParam(urlParams, 'string-filters', stringFilters);\r\n            this.addArrParam(urlParams, 'string-values', stringValues);\r\n        }\r\n        \r\n        if (ratingRange && ratingRange[0] && ratingRange[1]) {\r\n            this.addArrParam(urlParams, 'number-filter-starts', [ratingRange[0]]);\r\n            this.addArrParam(urlParams, 'number-filter-ends', [ratingRange[1]]);\r\n            this.addArrParam(urlParams, 'number-filters', [\"rating\"])\r\n        }\r\n\r\n        if (orders && orders.length && orderDirections && orderDirections.length) {\r\n            this.addArrParam(urlParams, 'orders', orders);\r\n            this.addArrParam(urlParams, 'order-directions', orderDirections);\r\n        }\r\n\r\n        this.addArrParam(urlParams, 'block-chains', chains);\r\n\r\n        const response: AxiosResponse<IGamesResponse> =\r\n            await axios.get<IGamesResponse, AxiosResponse<IGamesResponse>>(\r\n                `${this._apiUrl}/game-hub/games`,\r\n                {params: urlParams, signal: signal})\r\n\r\n        if(signal.aborted) {\r\n            return {\r\n                dataList: [],\r\n                pageNum: 0,\r\n                pageSize: 0,\r\n                totalNum: 0,\r\n                totalPage: 0\r\n            }\r\n        }\r\n\r\n        return response.data;\r\n    }\r\n\r\n    gameDetail = async ({gameUri}: IGameDetailParams, signal: AbortSignal): Promise<IGameDetailResponse> => {\r\n\r\n        const response: AxiosResponse<IGameDetailResponse> =\r\n            await axios.get<IGameDetailResponse, AxiosResponse<IGameDetailResponse>>(\r\n                `${this._apiUrl}/game-hub/games/${gameUri}`,\r\n                getConfig(false, signal, undefined)\r\n            )\r\n\r\n        return response.data;\r\n    }\r\n\r\n    nftDetail = async ({nftCollectionId}: INftDetailParams, signal: AbortSignal): Promise<INftDetailResponse> => {\r\n        const response: AxiosResponse<INftDetailResponse> =\r\n            await axios.get<INftDetailResponse, AxiosResponse<INftDetailResponse>>(\r\n                `${this._apiUrl}/game-hub/nft-collections/${nftCollectionId}`,\r\n                getConfig(false, signal)\r\n            )\r\n        return response.data;\r\n    }\r\n\r\n    nftDetailByAddress = async ({collectionAddress}: INftDetailByAddressParams, signal: AbortSignal): Promise<INftDetailResponse> => {\r\n        const response: AxiosResponse<INftDetailResponse> =\r\n            await axios.get<INftDetailResponse, AxiosResponse<INftDetailResponse>>(\r\n                `${this._apiUrl}/game-hub/nft-collections/address/${collectionAddress}`,\r\n                getConfig(false, signal)\r\n            )\r\n        return response.data;\r\n    }\r\n\r\n    getSearch = async ({keywords, url, pageSize, pageNum}: ISearchParams, signal: AbortSignal): Promise<ISearchResultResponse> => {\r\n        const urlParams = this.addPagingParams({pageSize, pageNum})\r\n\r\n        if (keywords) {\r\n            urlParams.append('keywords', keywords);\r\n        }\r\n\r\n        const response: AxiosResponse<ISearchResultResponse> =\r\n            await axios.get<ISearchResultResponse, AxiosResponse<ISearchResultResponse>>(\r\n                `${this._apiUrl}/game-hub/${url}`,\r\n                {params: urlParams, signal: signal})\r\n\r\n        return response.data;\r\n    }\r\n\r\n    likeGame = async ({ gameUri, action }: ILikeGameParams, signal: AbortSignal): Promise<void> => {\r\n\r\n        const urlParams = new URLSearchParams([\r\n            ['action', `${action}`]\r\n        ]);\r\n\r\n        await axios.put(\r\n            `${this._apiUrl}/game-hub/games/${gameUri}/like`,\r\n            null,\r\n            getConfig(true, signal, urlParams)\r\n            )\r\n    }\r\n\r\n    likeReview = async ({ gameUri, reviewId, action }: ILikeReviewParams, signal: AbortSignal): Promise<void> => {\r\n\r\n        const urlParams = new URLSearchParams([\r\n            ['action', `${action}`]\r\n        ]);\r\n\r\n        await axios.put(\r\n            `${this._apiUrl}/game-hub/${gameUri}/reviews/${reviewId}/like`,\r\n            null,\r\n            getConfig(true, signal, urlParams)\r\n            )\r\n    }\r\n\r\n    saveReview = ({ content, gameUri }: ISaveReviewParams, signal: AbortSignal): Promise<void> => axios.put(\r\n        `${this._apiUrl}/game-hub/games/${gameUri}/reviews`,\r\n        { content },\r\n        getConfig(true, signal, undefined))\r\n\r\n\r\n    saveFeedback = ({ gameUri, isGameFun, isGameProfitable, rating }: ISaveFeedbackParams, signal: AbortSignal): Promise<void> => {\r\n        \r\n        const urlParams = new URLSearchParams([\r\n            ['isGameFun', `${isGameFun}`],\r\n            ['isGameProfitable', `${isGameProfitable}`],\r\n            ['rating', `${rating}`]\r\n        ]);\r\n\r\n        return axios.put(\r\n            `${this._apiUrl}/game-hub/games/${gameUri}/feedback`,\r\n            null,\r\n            getConfig(true, signal, urlParams))\r\n    }\r\n\r\n    getReviews = async ({ pageNum, pageSize, gameUri }: IReviewsParams, signal: AbortSignal): Promise<IReviewResponse> => {\r\n        const urlParams = this.addPagingParams({pageSize, pageNum})\r\n\r\n        const response: AxiosResponse<IReviewResponse> =\r\n        await axios.get<IReviewResponse, AxiosResponse<IReviewResponse>>(\r\n            `${this._apiUrl}/game-hub/games/${gameUri}/reviews`,\r\n            getConfig(false, signal, urlParams))\r\n\r\n        return response.data;\r\n    }\r\n\r\n    getCurrentUserReview = async (gameUri: string, signal: AbortSignal): Promise<ICurUserReview> => {\r\n        const response: AxiosResponse<ICurUserReview> =\r\n            await axios.get<ICurUserReview, AxiosResponse<ICurUserReview>>(\r\n                `${this._apiUrl}/game-hub/games/${gameUri}/reviews/cur-user-review`,\r\n                getConfig(true, signal))\r\n\r\n        return response.data;\r\n    }\r\n\r\n    constructor({apiUrl}: IOortClientSettings) {\r\n        this._apiUrl = apiUrl\r\n    }\r\n\r\n    private readonly _apiUrl: string\r\n\r\n    private addArrParam(urlParams: URLSearchParams, name: string, arr: Array<string | number>) {\r\n        if (arr.length) {\r\n            arr.forEach(x => {\r\n                urlParams.append(name, x.toString())\r\n            })\r\n        }\r\n    }\r\n\r\n    private addPagingParams({ pageNum, pageSize }: IPagingParams, urlParams?: URLSearchParams): URLSearchParams {\r\n        urlParams = urlParams || new URLSearchParams()\r\n        urlParams.append('page-num', `${pageNum}`)\r\n        urlParams.append('page-size', `${pageSize}`)\r\n        return urlParams\r\n    }\r\n}","import {NumRange} from \"@oort/ui\";\r\n\r\nexport interface IPagingParams {\r\n    pageNum: number\r\n    pageSize: number\r\n}\r\n\r\ninterface IPagingResponse<T> {\r\n    dataList: T[]\r\n    pageNum: number\r\n    pageSize: number\r\n    totalNum: number\r\n    totalPage: number\r\n}\r\n\r\nexport enum GameStatusEnum {\r\n    Live = \"Live\",\r\n    Alpha = \"Alpha\",\r\n    Beta = \"Beta\",\r\n    Development = \"Development\",\r\n    Cancelled = \"Cancelled\",\r\n    Presale = \"Presale\"\r\n}\r\n\r\nexport enum MissionType {\r\n    Toturial = \"Toturial\",\r\n    Tournament = \"Tournament\",\r\n    Airdrop = \"Airdrop\",\r\n    IDO = \"IDO\",\r\n    INO = \"INO\",\r\n    MerchandiseSale = \"Merchandise Sale\",\r\n    DiscountOffer = \"Discount Offer\"\r\n}\r\n\r\nexport enum SearchGameHubType {\r\n    SearchGames = 'search-games',\r\n    searchNFTCollections = 'search-nft-collections'\r\n}\r\n\r\ninterface IGame {\r\n    blockChains: number[],\r\n    description: string,\r\n    devices: string | undefined,\r\n    genre: string | undefined,\r\n    id: number,\r\n    logo: string,\r\n    image: string,\r\n    name: string,\r\n    nftCollectionsCount: number,\r\n    rating: number,\r\n    status: GameStatusEnum,\r\n    uri: string,\r\n}\r\n\r\nexport interface INewGame extends IGame {\r\n    discordUrl: string,\r\n    image: string,\r\n    telegramUrl: string,\r\n    twitterUrl: string,\r\n    websiteUrl: string | undefined\r\n}\r\n\r\nexport interface IPopularGame extends IGame { }\r\n\r\nexport interface ITopRatedGame extends IGame {\r\n    likeNum: number\r\n    reviews: number\r\n    views: number\r\n}\r\n\r\nexport interface IPopularTournament {\r\n    id: number\r\n    startTime: string\r\n    endTime: string\r\n    type: MissionType\r\n    title: string\r\n    rules: string\r\n    prizes: string\r\n    sort: number\r\n    gameId: number\r\n    url: string\r\n    image: string\r\n}\r\n\r\nexport interface INFTForRent {\r\n    id:number\r\n    chainId: number\r\n    contractAddress: string\r\n    title:string\r\n}\r\n\r\nexport interface INft {\r\n    averagePrice: string\r\n    blockChain: number\r\n    bsHolders: string\r\n    category: string\r\n    contractAddress: string\r\n    discordFollowers: string\r\n    floorPrice: string\r\n    id: number\r\n    logo: string\r\n    marketCap: string\r\n    name: string\r\n    totalSupply: string\r\n    traders: string\r\n    twitterFollowers: string\r\n    volume: string\r\n}\r\n\r\nexport interface INftsResponse extends IPagingResponse<INft> { }\r\n\r\nexport interface IReviewsParams extends IPagingParams {\r\n    gameUri: string\r\n}\r\n\r\nexport type RatingType = 0|1|2|3|4|5\r\n\r\nexport interface IReview {\r\n    id: number\r\n    content: string\r\n    dislikeNum: number\r\n    likeNum: number\r\n    gameId: number\r\n    myLikeAction: LikeType | null\r\n    publishTime: string\r\n    replyNum: number\r\n    replyReviewId: number\r\n    score: number\r\n    userAvatar: string\r\n    userId: number\r\n    userName: string\r\n    userWallet:string\r\n    rating: RatingType\r\n}\r\n\r\nexport interface IReviewResponse extends IPagingResponse<IReview> {}\r\n\r\nexport interface ISaveReviewParams {\r\n    gameUri: string\r\n    content: string\r\n}\r\n\r\nexport interface ISaveFeedbackParams {\r\n    gameUri: string\r\n    isGameProfitable: boolean\r\n    isGameFun: boolean\r\n    rating: RatingType\r\n}\r\n\r\nexport interface IGamesResponse extends IPagingResponse<INewGame> {}\r\n\r\nexport interface IGameDetailResponse {\r\n    game: INewGame\r\n    nftCollections: INft[]\r\n    missions: IPopularTournament[]\r\n    myLikeAction: LikeType | null\r\n    hasFeedback: boolean\r\n}\r\n\r\nexport interface INftDetailResponse {\r\n    nftCollection: INft\r\n}\r\n\r\nexport interface ISearchListItem {\r\n    id: number\r\n    logo: string\r\n    name: string\r\n    uri: string\r\n}\r\n\r\nexport interface ISearchResultResponse {\r\n    dataList: ISearchListItem[]\r\n}\r\n\r\nexport interface IDasboardResponse {\r\n    newGames: INewGame[],\r\n    popularGames: IPopularGame[],\r\n    topRatedGameList: ITopRatedGame[],\r\n    popularMissions: IPopularTournament[],\r\n    nftForRents:INFTForRent[]\r\n}\r\n\r\nexport interface IOortClientSettings {\r\n    apiUrl: string\r\n}\r\n\r\nexport type LikeType = 'like' | 'dislike'\r\n\r\nexport interface ILikeGameParams {\r\n    action: LikeType | null\r\n    gameUri: string\r\n}\r\n\r\nexport interface ILikeReviewParams {\r\n    action: LikeType | null\r\n    gameUri: string\r\n    reviewId: number\r\n}\r\n\r\nexport interface INftsParams extends IPagingParams {\r\n    chains: number[]\r\n    games: number[]\r\n    gamesOnly: boolean\r\n    keywords: string | null\r\n\r\n    twitterFollowersRange: NumRange\r\n    discordFollowersRange: NumRange\r\n    floorPriceRange: NumRange\r\n    volumeRange: NumRange\r\n    marketCapRange: NumRange\r\n    tradersRange: NumRange\r\n    totalSupplyRange: NumRange\r\n\r\n    orderDirections: string[]\r\n    orders: string[]\r\n}\r\n\r\nexport interface IGamesParams extends IPagingParams {\r\n    collectionIds: number[] | null\r\n    chains: number[]\r\n    keywords: string | null\r\n    status: string[]\r\n    genre: string[]\r\n    devices: string[]\r\n    ratingRange: NumRange\r\n    orderDirections: string[] | null\r\n    orders: string[] | null\r\n}\r\n\r\nexport interface ISearchParams extends IPagingParams {\r\n    url: SearchGameHubType\r\n    keywords: string | null\r\n}\r\n\r\nexport interface IGameDetailParams{\r\n    gameUri: string\r\n}\r\n\r\nexport interface INftDetailParams {\r\n    nftCollectionId: number\r\n}\r\n\r\nexport interface INftDetailByAddressParams {\r\n    collectionAddress: string\r\n}\r\n\r\nexport interface ICurUserReview {\r\n    reviewId: number\r\n    content: string\r\n}\r\n\r\nexport interface IOortClient {\r\n    dashboard: (signal: AbortSignal) => Promise<IDasboardResponse>\r\n    nfts: (params: INftsParams, signal: AbortSignal) => Promise<INftsResponse>\r\n    games: (params: IGamesParams, signal: AbortSignal) => Promise<IGamesResponse>\r\n    gameDetail: (params: IGameDetailParams, signal: AbortSignal) => Promise<IGameDetailResponse>\r\n    nftDetail: (params: INftDetailParams, signal: AbortSignal) => Promise<INftDetailResponse>\r\n    nftDetailByAddress: (params: INftDetailByAddressParams, signal: AbortSignal) => Promise<INftDetailResponse>\r\n    getSearch: (params: ISearchParams, signal: AbortSignal) => Promise<ISearchResultResponse>\r\n    likeGame: (params: ILikeGameParams, signal: AbortSignal) => Promise<void>\r\n    likeReview: (params: ILikeReviewParams, signal: AbortSignal) => Promise<void>\r\n    getReviews: (params: IReviewsParams, signal: AbortSignal) => Promise<IReviewResponse>\r\n    getCurrentUserReview: (gameUri: string, signal: AbortSignal) => Promise<ICurUserReview>\r\n    saveReview: (params: ISaveReviewParams, signal: AbortSignal) => Promise<void>\r\n    saveFeedback: (params: ISaveFeedbackParams, signal: AbortSignal) => Promise<void>\r\n}\r\n"],"names":["S"],"mappings":"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"}